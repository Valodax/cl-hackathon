{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "log_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "log_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "log_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "name": "log_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "val",
          "type": "address"
        }
      ],
      "name": "log_named_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "val",
          "type": "bytes"
        }
      ],
      "name": "log_named_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "val",
          "type": "bytes32"
        }
      ],
      "name": "log_named_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        }
      ],
      "name": "log_named_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "val",
          "type": "string"
        }
      ],
      "name": "log_named_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        }
      ],
      "name": "log_named_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "log_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "logs",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "IS_SCRIPT",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "IS_TEST",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "failed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "myContract",
      "outputs": [
        {
          "internalType": "contract Contract",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "setUp",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testExample",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testHello",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testSetNumber",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "vm",
      "outputs": [
        {
          "internalType": "contract Vm",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60806040526000805462ff00ff19166201000117905534801561002157600080fd5b50610bff806100316000396000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c8063ba414fa611610066578063ba414fa6146100ea578063bc33657a14610102578063c97c635314610115578063f8ccbf471461011d578063fa7626d41461013057600080fd5b80630a9254e41461009857806336c784ea146100a25780633a768463146100aa5780633f5a4a2a146100e2575b600080fd5b6100a061013d565b005b6100a0610188565b6100c5737109709ecfa91a80626ff3989d68f67f5b1dd12d81565b6040516001600160a01b0390911681526020015b60405180910390f35b6100a0610269565b6100f2610273565b60405190151581526020016100d9565b6008546100c5906001600160a01b031681565b6100a061039e565b6000546100f29062010000900460ff1681565b6000546100f29060ff1681565b604051610149906107e1565b604051809103906000f080158015610165573d6000803e3d6000fd5b50600880546001600160a01b0319166001600160a01b0392909216919091179055565b600854604051633fb5c1cb60e01b8152602a60048201526001600160a01b0390911690633fb5c1cb90602401600060405180830381600087803b1580156101ce57600080fd5b505af11580156101e2573d6000803e3d6000fd5b50505050610267600860009054906101000a90046001600160a01b03166001600160a01b0316638381f58a6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561023c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061026091906107ee565b602a61043e565b565b6102676001610531565b60008054610100900460ff16156102935750600054610100900460ff1690565b6000737109709ecfa91a80626ff3989d68f67f5b1dd12d3b156103995760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b82840152825180830384018152606083019093526000929091610321917f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc49160800161082b565b60408051601f198184030181529082905261033b9161085c565b6000604051808303816000865af19150503d8060008114610378576040519150601f19603f3d011682016040523d82523d6000602084013e61037d565b606091505b50915050808060200190518101906103959190610878565b9150505b919050565b600854604080516319ff1d2160e01b81529051610267926001600160a01b0316916319ff1d219160048083019260009291908290030181865afa1580156103e9573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261041191908101906108b7565b6040518060400160405280600f81526020016e48656c6c6f2c20466f756e6472792160881b8152506105a8565b80821461052d577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f506040516104af9060208082526022908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b75696e604082015261745d60f01b606082015260800190565b60405180910390a17fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a8816040516104e69190610964565b60405180910390a17fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a88260405161051d919061099c565b60405180910390a161052d6106d5565b5050565b806105a5577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f506040516105959060208082526017908201527f4572726f723a20417373657274696f6e204661696c6564000000000000000000604082015260600190565b60405180910390a16105a56106d5565b50565b806040516020016105b9919061085c565b60405160208183030381529060405280519060200120826040516020016105e0919061085c565b604051602081830303815290604052805190602001201461052d577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f506040516106679060208082526024908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b737472604082015263696e675d60e01b606082015260800190565b60405180910390a17f280f4446b28a1372417dda658d30b95b2992b12ac9c7f378535f29a97acf35838160405161069e91906109f2565b60405180910390a17f280f4446b28a1372417dda658d30b95b2992b12ac9c7f378535f29a97acf35838260405161051d9190610a36565b737109709ecfa91a80626ff3989d68f67f5b1dd12d3b156107d05760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b9282019290925260016060820152600091907f70ca10bbd0dbfd9020a9f4b13402c16cb120705e0d1c0aeab10fa353ae586fc49060800160408051601f198184030181529082905261076f929160200161082b565b60408051601f19818403018152908290526107899161085c565b6000604051808303816000865af19150503d80600081146107c6576040519150601f19603f3d011682016040523d82523d6000602084013e6107cb565b606091505b505050505b6000805461ff001916610100179055565b61016980610a6183390190565b60006020828403121561080057600080fd5b5051919050565b60005b8381101561082257818101518382015260200161080a565b50506000910152565b6001600160e01b031983168152815160009061084e816004850160208701610807565b919091016004019392505050565b6000825161086e818460208701610807565b9190910192915050565b60006020828403121561088a57600080fd5b8151801515811461089a57600080fd5b9392505050565b634e487b7160e01b600052604160045260246000fd5b6000602082840312156108c957600080fd5b815167ffffffffffffffff808211156108e157600080fd5b818401915084601f8301126108f557600080fd5b815181811115610907576109076108a1565b604051601f8201601f19908116603f0116810190838211818310171561092f5761092f6108a1565b8160405282815287602084870101111561094857600080fd5b610959836020830160208801610807565b979650505050505050565b60408152600061098e60408301600a8152690808115e1c1958dd195960b21b602082015260400190565b905082602083015292915050565b60408152600061098e60408301600a815269080808081058dd1d585b60b21b602082015260400190565b600081518084526109de816020860160208601610807565b601f01601f19169290920160200192915050565b604081526000610a1c60408301600a8152690808115e1c1958dd195960b21b602082015260400190565b8281036020840152610a2e81856109c6565b949350505050565b604081526000610a1c60408301600a815269080808081058dd1d585b60b21b60208201526040019056fe608060405234801561001057600080fd5b50610149806100206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c806319ff1d21146100465780633fb5c1cb146100805780638381f58a14610095575b600080fd5b604080518082018252600f81526e48656c6c6f2c20466f756e6472792160881b6020820152905161007791906100ac565b60405180910390f35b61009361008e3660046100fa565b600055565b005b61009e60005481565b604051908152602001610077565b600060208083528351808285015260005b818110156100d9578581018301518582016040015282016100bd565b506000604082860101526040601f19601f8301168501019250505092915050565b60006020828403121561010c57600080fd5b503591905056fea264697066735822122074154c2ee59b0c0636c27dd176f86cd17a56aac7561101384788200c5bc1576264736f6c63430008110033a26469706673582212201be7d2e00595a5220220e1db194c5dd25d4fb4861675b64d1b2d4aea6830857d64736f6c63430008110033",
    "sourceMap": "154:428:9:-:0;;;1572:26:0;;;-1:-1:-1;;170:28:1;;;;;154:428:9;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106100935760003560e01c8063ba414fa611610066578063ba414fa6146100ea578063bc33657a14610102578063c97c635314610115578063f8ccbf471461011d578063fa7626d41461013057600080fd5b80630a9254e41461009857806336c784ea146100a25780633a768463146100aa5780633f5a4a2a146100e2575b600080fd5b6100a061013d565b005b6100a0610188565b6100c5737109709ecfa91a80626ff3989d68f67f5b1dd12d81565b6040516001600160a01b0390911681526020015b60405180910390f35b6100a0610269565b6100f2610273565b60405190151581526020016100d9565b6008546100c5906001600160a01b031681565b6100a061039e565b6000546100f29062010000900460ff1681565b6000546100f29060ff1681565b604051610149906107e1565b604051809103906000f080158015610165573d6000803e3d6000fd5b50600880546001600160a01b0319166001600160a01b0392909216919091179055565b600854604051633fb5c1cb60e01b8152602a60048201526001600160a01b0390911690633fb5c1cb90602401600060405180830381600087803b1580156101ce57600080fd5b505af11580156101e2573d6000803e3d6000fd5b50505050610267600860009054906101000a90046001600160a01b03166001600160a01b0316638381f58a6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561023c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061026091906107ee565b602a61043e565b565b6102676001610531565b60008054610100900460ff16156102935750600054610100900460ff1690565b6000737109709ecfa91a80626ff3989d68f67f5b1dd12d3b156103995760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b82840152825180830384018152606083019093526000929091610321917f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc49160800161082b565b60408051601f198184030181529082905261033b9161085c565b6000604051808303816000865af19150503d8060008114610378576040519150601f19603f3d011682016040523d82523d6000602084013e61037d565b606091505b50915050808060200190518101906103959190610878565b9150505b919050565b600854604080516319ff1d2160e01b81529051610267926001600160a01b0316916319ff1d219160048083019260009291908290030181865afa1580156103e9573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261041191908101906108b7565b6040518060400160405280600f81526020016e48656c6c6f2c20466f756e6472792160881b8152506105a8565b80821461052d577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f506040516104af9060208082526022908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b75696e604082015261745d60f01b606082015260800190565b60405180910390a17fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a8816040516104e69190610964565b60405180910390a17fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a88260405161051d919061099c565b60405180910390a161052d6106d5565b5050565b806105a5577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f506040516105959060208082526017908201527f4572726f723a20417373657274696f6e204661696c6564000000000000000000604082015260600190565b60405180910390a16105a56106d5565b50565b806040516020016105b9919061085c565b60405160208183030381529060405280519060200120826040516020016105e0919061085c565b604051602081830303815290604052805190602001201461052d577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f506040516106679060208082526024908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b737472604082015263696e675d60e01b606082015260800190565b60405180910390a17f280f4446b28a1372417dda658d30b95b2992b12ac9c7f378535f29a97acf35838160405161069e91906109f2565b60405180910390a17f280f4446b28a1372417dda658d30b95b2992b12ac9c7f378535f29a97acf35838260405161051d9190610a36565b737109709ecfa91a80626ff3989d68f67f5b1dd12d3b156107d05760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b9282019290925260016060820152600091907f70ca10bbd0dbfd9020a9f4b13402c16cb120705e0d1c0aeab10fa353ae586fc49060800160408051601f198184030181529082905261076f929160200161082b565b60408051601f19818403018152908290526107899161085c565b6000604051808303816000865af19150503d80600081146107c6576040519150601f19603f3d011682016040523d82523d6000602084013e6107cb565b606091505b505050505b6000805461ff001916610100179055565b61016980610a6183390190565b60006020828403121561080057600080fd5b5051919050565b60005b8381101561082257818101518382015260200161080a565b50506000910152565b6001600160e01b031983168152815160009061084e816004850160208701610807565b919091016004019392505050565b6000825161086e818460208701610807565b9190910192915050565b60006020828403121561088a57600080fd5b8151801515811461089a57600080fd5b9392505050565b634e487b7160e01b600052604160045260246000fd5b6000602082840312156108c957600080fd5b815167ffffffffffffffff808211156108e157600080fd5b818401915084601f8301126108f557600080fd5b815181811115610907576109076108a1565b604051601f8201601f19908116603f0116810190838211818310171561092f5761092f6108a1565b8160405282815287602084870101111561094857600080fd5b610959836020830160208801610807565b979650505050505050565b60408152600061098e60408301600a8152690808115e1c1958dd195960b21b602082015260400190565b905082602083015292915050565b60408152600061098e60408301600a815269080808081058dd1d585b60b21b602082015260400190565b600081518084526109de816020860160208601610807565b601f01601f19169290920160200192915050565b604081526000610a1c60408301600a8152690808115e1c1958dd195960b21b602082015260400190565b8281036020840152610a2e81856109c6565b949350505050565b604081526000610a1c60408301600a815269080808081058dd1d585b60b21b60208201526040019056fe608060405234801561001057600080fd5b50610149806100206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c806319ff1d21146100465780633fb5c1cb146100805780638381f58a14610095575b600080fd5b604080518082018252600f81526e48656c6c6f2c20466f756e6472792160881b6020820152905161007791906100ac565b60405180910390f35b61009361008e3660046100fa565b600055565b005b61009e60005481565b604051908152602001610077565b600060208083528351808285015260005b818110156100d9578581018301518582016040015282016100bd565b506000604082860101526040601f19601f8301168501019250505092915050565b60006020828403121561010c57600080fd5b503591905056fea264697066735822122074154c2ee59b0c0636c27dd176f86cd17a56aac7561101384788200c5bc1576264736f6c63430008110033a26469706673582212201be7d2e00595a5220220e1db194c5dd25d4fb4861675b64d1b2d4aea6830857d64736f6c63430008110033",
    "sourceMap": "154:428:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;223:68;;;:::i;:::-;;464:116;;;:::i;321:38:1:-;;250:64;321:38;;;;;-1:-1:-1;;;;;189:32:10;;;171:51;;159:2;144:18;321:38:1;;;;;;;;297:63:9;;;:::i;1819:584:0:-;;;:::i;:::-;;;398:14:10;;391:22;373:41;;361:2;346:18;1819:584:0;233:187:10;190:26:9;;;;;-1:-1:-1;;;;;190:26:9;;;366:92;;;:::i;170:28:1:-;;;;;;;;;;;;1572:26:0;;;;;;;;;223:68:9;270:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;257:10:9;:27;;-1:-1:-1;;;;;;257:27:9;-1:-1:-1;;;;;257:27:9;;;;;;;;;;223:68::o;464:116::-;506:10;;:24;;-1:-1:-1;;;506:24:9;;527:2;506:24;;;806:25:10;-1:-1:-1;;;;;506:10:9;;;;:20;;779:18:10;;506:24:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;540:33;549:10;;;;;;;;;-1:-1:-1;;;;;549:10:9;-1:-1:-1;;;;;549:17:9;;:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;570:2;540:8;:33::i;:::-;464:116::o;297:63::-;337:16;348:4;337:10;:16::i;1819:584:0:-;1853:4;1873:7;;;;;;;1869:528;;;-1:-1:-1;1903:7:0;;;;;;;;1819:584::o;1869:528::-;1941:17;2990:42;2978:55;3059:16;1980:374;;2196:43;;;1671:64;2196:43;;;1205:51:10;;;-1:-1:-1;;;1272:18:10;;;1265:34;2196:43:0;;;;;;;;;1178:18:10;;;2196:43:0;;;-1:-1:-1;;1671:64:0;;2086:175;;2135:34;;2086:175;;;:::i;:::-;;;;-1:-1:-1;;2086:175:0;;;;;;;;;;2047:232;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2020:259;;;2323:7;2312:27;;;;;;;;;;;;:::i;:::-;2297:42;;2002:352;1980:374;2374:12;1819:584;-1:-1:-1;1819:584:0:o;366:92:9:-;413:10;;:18;;;-1:-1:-1;;;413:18:9;;;;404:47;;-1:-1:-1;;;;;413:10:9;;:16;;:18;;;;;:10;;:18;;;;;;;:10;:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;413:18:9;;;;;;;;;;;;:::i;:::-;404:47;;;;;;;;;;;;;-1:-1:-1;;;404:47:9;;;:8;:47::i;5202:262:0:-;5264:1;5259;:6;5255:203;;5286:41;;;;;3764:2:10;3746:21;;;3803:2;3783:18;;;3776:30;3842:34;3837:2;3822:18;;3815:62;-1:-1:-1;;;3908:2:10;3893:18;;3886:32;3950:3;3935:19;;3562:398;5286:41:0;;;;;;;;5346:31;5375:1;5346:31;;;;;;:::i;:::-;;;;;;;;5396;5425:1;5396:31;;;;;;:::i;:::-;;;;;;;;5441:6;:4;:6::i;:::-;5202:262;;:::o;3255:157::-;3315:9;3310:96;;3345:30;;;;;5201:2:10;5183:21;;;5240:2;5220:18;;;5213:30;5279:25;5274:2;5259:18;;5252:53;5337:2;5322:18;;4999:347;3345:30:0;;;;;;;;3389:6;:4;:6::i;:::-;3255:157;:::o;14688:344::-;14824:1;14807:19;;;;;;;;:::i;:::-;;;;;;;;;;;;;14797:30;;;;;;14790:1;14773:19;;;;;;;;:::i;:::-;;;;;;;;;;;;;14763:30;;;;;;:64;14759:267;;14848:43;;;;;5847:2:10;5829:21;;;5886:2;5866:18;;;5859:30;5925:34;5920:2;5905:18;;5898:62;-1:-1:-1;;;5991:2:10;5976:18;;5969:34;6035:3;6020:19;;5645:400;14848:43:0;;;;;;;;14910:33;14941:1;14910:33;;;;;;:::i;:::-;;;;;;;;14962;14993:1;14962:33;;;;;;:::i;2410:424::-;2990:42;2978:55;3059:16;2445:359;;2645:67;;;1671:64;2645:67;;;7418:51:10;;;-1:-1:-1;;;7485:18:10;;;7478:34;;;;2705:4:0;7528:18:10;;;7521:34;2482:11:0;;1671:64;2579:43;;7391:18:10;;2645:67:0;;;-1:-1:-1;;2645:67:0;;;;;;;;;;2534:196;;;2645:67;2534:196;;:::i;:::-;;;;-1:-1:-1;;2534:196:0;;;;;;;;;;2499:245;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;2445:359:0;2813:7;:14;;-1:-1:-1;;2813:14:0;;;;;2410:424::o;-1:-1:-1:-;;;;;;;;:::o;842:184:10:-;912:6;965:2;953:9;944:7;940:23;936:32;933:52;;;981:1;978;971:12;933:52;-1:-1:-1;1004:16:10;;842:184;-1:-1:-1;842:184:10:o;1310:250::-;1395:1;1405:113;1419:6;1416:1;1413:13;1405:113;;;1495:11;;;1489:18;1476:11;;;1469:39;1441:2;1434:10;1405:113;;;-1:-1:-1;;1552:1:10;1534:16;;1527:27;1310:250::o;1565:384::-;-1:-1:-1;;;;;;1750:33:10;;1738:46;;1807:13;;1720:3;;1829:74;1807:13;1892:1;1883:11;;1876:4;1864:17;;1829:74;:::i;:::-;1923:16;;;;1941:1;1919:24;;1565:384;-1:-1:-1;;;1565:384:10:o;1954:287::-;2083:3;2121:6;2115:13;2137:66;2196:6;2191:3;2184:4;2176:6;2172:17;2137:66;:::i;:::-;2219:16;;;;;1954:287;-1:-1:-1;;1954:287:10:o;2246:277::-;2313:6;2366:2;2354:9;2345:7;2341:23;2337:32;2334:52;;;2382:1;2379;2372:12;2334:52;2414:9;2408:16;2467:5;2460:13;2453:21;2446:5;2443:32;2433:60;;2489:1;2486;2479:12;2433:60;2512:5;2246:277;-1:-1:-1;;;2246:277:10:o;2528:127::-;2589:10;2584:3;2580:20;2577:1;2570:31;2620:4;2617:1;2610:15;2644:4;2641:1;2634:15;2660:897;2740:6;2793:2;2781:9;2772:7;2768:23;2764:32;2761:52;;;2809:1;2806;2799:12;2761:52;2842:9;2836:16;2871:18;2912:2;2904:6;2901:14;2898:34;;;2928:1;2925;2918:12;2898:34;2966:6;2955:9;2951:22;2941:32;;3011:7;3004:4;3000:2;2996:13;2992:27;2982:55;;3033:1;3030;3023:12;2982:55;3062:2;3056:9;3084:2;3080;3077:10;3074:36;;;3090:18;;:::i;:::-;3165:2;3159:9;3133:2;3219:13;;-1:-1:-1;;3215:22:10;;;3239:2;3211:31;3207:40;3195:53;;;3263:18;;;3283:22;;;3260:46;3257:72;;;3309:18;;:::i;:::-;3349:10;3345:2;3338:22;3384:2;3376:6;3369:18;3424:7;3419:2;3414;3410;3406:11;3402:20;3399:33;3396:53;;;3445:1;3442;3435:12;3396:53;3458:68;3523:2;3518;3510:6;3506:15;3501:2;3497;3493:11;3458:68;:::i;:::-;3545:6;2660:897;-1:-1:-1;;;;;;;2660:897:10:o;4129:348::-;4359:2;4348:9;4341:21;4322:4;4379:49;4424:2;4413:9;4409:18;4042:2;4030:15;;-1:-1:-1;;;4070:4:10;4061:14;;4054:36;4115:2;4106:12;;3965:159;4379:49;4371:57;;4464:6;4459:2;4448:9;4444:18;4437:34;4129:348;;;;:::o;4646:::-;4876:2;4865:9;4858:21;4839:4;4896:49;4941:2;4930:9;4926:18;4559:2;4547:15;;-1:-1:-1;;;4587:4:10;4578:14;;4571:36;4632:2;4623:12;;4482:159;6050:271;6092:3;6130:5;6124:12;6157:6;6152:3;6145:19;6173:76;6242:6;6235:4;6230:3;6226:14;6219:4;6212:5;6208:16;6173:76;:::i;:::-;6303:2;6282:15;-1:-1:-1;;6278:29:10;6269:39;;;;6310:4;6265:50;;6050:271;-1:-1:-1;;6050:271:10:o;6326:440::-;6576:2;6565:9;6558:21;6539:4;6602:49;6647:2;6636:9;6632:18;4042:2;4030:15;;-1:-1:-1;;;4070:4:10;4061:14;;4054:36;4115:2;4106:12;;3965:159;6602:49;6699:9;6691:6;6687:22;6682:2;6671:9;6667:18;6660:50;6727:33;6753:6;6745;6727:33;:::i;:::-;6719:41;6326:440;-1:-1:-1;;;;6326:440:10:o;6771:::-;7021:2;7010:9;7003:21;6984:4;7047:49;7092:2;7081:9;7077:18;4559:2;4547:15;;-1:-1:-1;;;4587:4:10;4578:14;;4571:36;4632:2;4623:12;;4482:159",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "IS_SCRIPT()": "f8ccbf47",
    "IS_TEST()": "fa7626d4",
    "failed()": "ba414fa6",
    "myContract()": "bc33657a",
    "setUp()": "0a9254e4",
    "testExample()": "3f5a4a2a",
    "testHello()": "c97c6353",
    "testSetNumber()": "36c784ea",
    "vm()": "3a768463"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"log_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"log_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"log_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"name\":\"log_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"val\",\"type\":\"address\"}],\"name\":\"log_named_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"val\",\"type\":\"bytes\"}],\"name\":\"log_named_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"val\",\"type\":\"bytes32\"}],\"name\":\"log_named_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"}],\"name\":\"log_named_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"val\",\"type\":\"string\"}],\"name\":\"log_named_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"}],\"name\":\"log_named_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"log_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"logs\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"IS_SCRIPT\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"IS_TEST\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"failed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"myContract\",\"outputs\":[{\"internalType\":\"contract Contract\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"setUp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testExample\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testHello\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testSetNumber\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vm\",\"outputs\":[{\"internalType\":\"contract Vm\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"test/Contract.t.sol\":\"ContractTest\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\"]},\"sources\":{\"lib/forge-std/lib/ds-test/src/test.sol\":{\"keccak256\":\"0xb39cd1d5220cb474947b131e15a4538334b7e886af244b440ae5c9c6bba96a54\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://3101520221449ac0070bda3881311a71d9aa87e5210765e875246922cb5cb5f5\",\"dweb:/ipfs/Qmbg6kAHNoG7ox9N9Xqd9Ere2H2XixMFWFqvyPwFCzB3Gr\"]},\"lib/forge-std/src/Script.sol\":{\"keccak256\":\"0x9d09c1e55cd508d3376cff9961625d51d73f8ce075ec1e9deed41408a4556e00\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8880c5551daf337ab91665a9ce593df67a9eb11b0bee820f631d324d2fdd3a8b\",\"dweb:/ipfs/QmNpvSBGnS9Jr6Swd6XKsijG59a4yjYemWCFwprjKFkpNC\"]},\"lib/forge-std/src/StdJson.sol\":{\"keccak256\":\"0x1297a1cc393bc8163ccf143e5335536e78cb25ac24a4f6dfdb25f5746dd4827e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://945ccffad9fc09d2aa0ac200a80dcfa2f491dba8680fc9c3d3d450d891284b87\",\"dweb:/ipfs/QmYSfFb1L6LN1ZB9KWzZqxt2iAbpuFDskBcU1Bz4RiyuQ5\"]},\"lib/forge-std/src/Test.sol\":{\"keccak256\":\"0x6c9cbd51234372b66bf7c146870edf0855770c46e960a8fae8f354ddf382876b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fd0ff1f449294dd1447b9d483c52d78e137d8cac518646e76df9fdd4d185d6c2\",\"dweb:/ipfs/QmS3JP4vKgvAWo8Tc7zVrGxbdR7t37ayk1mTHN3seD6UAZ\"]},\"lib/forge-std/src/Vm.sol\":{\"keccak256\":\"0x1a5767028a0c3985e991456fc9650055e28b01b787c56b11f66ac30498a153ab\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f86887212eacca450a15a8a5bf9fe83fd91a2ba623df8e9c32c75a31824c8ea2\",\"dweb:/ipfs/QmTUHBNdZwntgjbFZne7fY9ZJLNGYWaq3uWfGk6FyqdAkB\"]},\"lib/forge-std/src/console.sol\":{\"keccak256\":\"0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70\",\"dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec\"]},\"lib/forge-std/src/console2.sol\":{\"keccak256\":\"0xbeb823fcdb356244a83aaccdf828ad019ecc1ffaa3dff18e624fc6d5714ea671\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4cbe9400340e5f9ec55e2aff3bad1c15fa3afbbe37e80800e6f3fed2ad26854f\",\"dweb:/ipfs/QmdJBABsuXkvWxVzEyGXsTE3vyfBPXDdw5xvvtUz3JeoYW\"]},\"src/Contract.sol\":{\"keccak256\":\"0x1bea1e82cd338e2ccd5f405447727cadc9c9e80a70ed09d25224424bd3cd8828\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bebd07039eca8773949c9be7e8f6834a38aaa3afa8f07dc71b8a3a72c05b8cad\",\"dweb:/ipfs/Qmb7UkLoYxJUtLjpwaAsrFxD2zdLRGJca35rXPZiiiSxkV\"]},\"src/Counter.sol\":{\"keccak256\":\"0x09277f949d59a9521708c870dc39c2c434ad8f86a5472efda6a732ef728c0053\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://94cd5258357da018bf911aeda60ed9f5b130dce27445669ee200313cd3389200\",\"dweb:/ipfs/QmNbEfWAqXCtfQpk6u7TpGa8sTHXFLpUz7uebz2FVbchSC\"]},\"test/Contract.t.sol\":{\"keccak256\":\"0x21fd795106cf215731fe1033aede98d3c994633166ce433e7ef878b187f13622\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://83c134bfd8db5ce732edd68e6261eddea81063214af8d186ca758519ad936972\",\"dweb:/ipfs/QmRfXyDPwozfuQrDMViysCG5h2zbqtqKSvCzwY2KRZPPuT\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.17+commit.8df45f5f"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256",
              "name": "",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "val",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "val",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes32",
              "name": "val",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "val",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "logs",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "IS_SCRIPT",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "IS_TEST",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "failed",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "myContract",
          "outputs": [
            {
              "internalType": "contract Contract",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setUp"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testExample"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testHello"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testSetNumber"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "vm",
          "outputs": [
            {
              "internalType": "contract Vm",
              "name": "",
              "type": "address"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {},
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":forge-std/=lib/forge-std/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "test/Contract.t.sol": "ContractTest"
      },
      "libraries": {}
    },
    "sources": {
      "lib/forge-std/lib/ds-test/src/test.sol": {
        "keccak256": "0xb39cd1d5220cb474947b131e15a4538334b7e886af244b440ae5c9c6bba96a54",
        "urls": [
          "bzz-raw://3101520221449ac0070bda3881311a71d9aa87e5210765e875246922cb5cb5f5",
          "dweb:/ipfs/Qmbg6kAHNoG7ox9N9Xqd9Ere2H2XixMFWFqvyPwFCzB3Gr"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/forge-std/src/Script.sol": {
        "keccak256": "0x9d09c1e55cd508d3376cff9961625d51d73f8ce075ec1e9deed41408a4556e00",
        "urls": [
          "bzz-raw://8880c5551daf337ab91665a9ce593df67a9eb11b0bee820f631d324d2fdd3a8b",
          "dweb:/ipfs/QmNpvSBGnS9Jr6Swd6XKsijG59a4yjYemWCFwprjKFkpNC"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdJson.sol": {
        "keccak256": "0x1297a1cc393bc8163ccf143e5335536e78cb25ac24a4f6dfdb25f5746dd4827e",
        "urls": [
          "bzz-raw://945ccffad9fc09d2aa0ac200a80dcfa2f491dba8680fc9c3d3d450d891284b87",
          "dweb:/ipfs/QmYSfFb1L6LN1ZB9KWzZqxt2iAbpuFDskBcU1Bz4RiyuQ5"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Test.sol": {
        "keccak256": "0x6c9cbd51234372b66bf7c146870edf0855770c46e960a8fae8f354ddf382876b",
        "urls": [
          "bzz-raw://fd0ff1f449294dd1447b9d483c52d78e137d8cac518646e76df9fdd4d185d6c2",
          "dweb:/ipfs/QmS3JP4vKgvAWo8Tc7zVrGxbdR7t37ayk1mTHN3seD6UAZ"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Vm.sol": {
        "keccak256": "0x1a5767028a0c3985e991456fc9650055e28b01b787c56b11f66ac30498a153ab",
        "urls": [
          "bzz-raw://f86887212eacca450a15a8a5bf9fe83fd91a2ba623df8e9c32c75a31824c8ea2",
          "dweb:/ipfs/QmTUHBNdZwntgjbFZne7fY9ZJLNGYWaq3uWfGk6FyqdAkB"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/console.sol": {
        "keccak256": "0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba",
        "urls": [
          "bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70",
          "dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/console2.sol": {
        "keccak256": "0xbeb823fcdb356244a83aaccdf828ad019ecc1ffaa3dff18e624fc6d5714ea671",
        "urls": [
          "bzz-raw://4cbe9400340e5f9ec55e2aff3bad1c15fa3afbbe37e80800e6f3fed2ad26854f",
          "dweb:/ipfs/QmdJBABsuXkvWxVzEyGXsTE3vyfBPXDdw5xvvtUz3JeoYW"
        ],
        "license": "MIT"
      },
      "src/Contract.sol": {
        "keccak256": "0x1bea1e82cd338e2ccd5f405447727cadc9c9e80a70ed09d25224424bd3cd8828",
        "urls": [
          "bzz-raw://bebd07039eca8773949c9be7e8f6834a38aaa3afa8f07dc71b8a3a72c05b8cad",
          "dweb:/ipfs/Qmb7UkLoYxJUtLjpwaAsrFxD2zdLRGJca35rXPZiiiSxkV"
        ],
        "license": "MIT"
      },
      "src/Counter.sol": {
        "keccak256": "0x09277f949d59a9521708c870dc39c2c434ad8f86a5472efda6a732ef728c0053",
        "urls": [
          "bzz-raw://94cd5258357da018bf911aeda60ed9f5b130dce27445669ee200313cd3389200",
          "dweb:/ipfs/QmNbEfWAqXCtfQpk6u7TpGa8sTHXFLpUz7uebz2FVbchSC"
        ],
        "license": "UNLICENSED"
      },
      "test/Contract.t.sol": {
        "keccak256": "0x21fd795106cf215731fe1033aede98d3c994633166ce433e7ef878b187f13622",
        "urls": [
          "bzz-raw://83c134bfd8db5ce732edd68e6261eddea81063214af8d186ca758519ad936972",
          "dweb:/ipfs/QmRfXyDPwozfuQrDMViysCG5h2zbqtqKSvCzwY2KRZPPuT"
        ],
        "license": "UNLICENSED"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "test/Contract.t.sol",
    "id": 23330,
    "exportedSymbols": {
      "Contract": [
        23249
      ],
      "ContractTest": [
        23329
      ],
      "Counter": [
        23271
      ],
      "DSTest": [
        1786
      ],
      "Script": [
        2049
      ],
      "StdStorage": [
        5077
      ],
      "Test": [
        4979
      ],
      "Vm": [
        7098
      ],
      "console": [
        15162
      ],
      "console2": [
        23226
      ],
      "stdError": [
        5049
      ],
      "stdJson": [
        2409
      ],
      "stdMath": [
        6318
      ],
      "stdStorage": [
        6179
      ]
    },
    "nodeType": "SourceUnit",
    "src": "39:544:9",
    "nodes": [
      {
        "id": 23273,
        "nodeType": "PragmaDirective",
        "src": "39:24:9",
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".10"
        ]
      },
      {
        "id": 23274,
        "nodeType": "ImportDirective",
        "src": "65:28:9",
        "absolutePath": "lib/forge-std/src/Test.sol",
        "file": "forge-std/Test.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 23330,
        "sourceUnit": 6319,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 23275,
        "nodeType": "ImportDirective",
        "src": "94:28:9",
        "absolutePath": "src/Counter.sol",
        "file": "../src/Counter.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 23330,
        "sourceUnit": 23272,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 23276,
        "nodeType": "ImportDirective",
        "src": "123:29:9",
        "absolutePath": "src/Contract.sol",
        "file": "../src/Contract.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 23330,
        "sourceUnit": 23250,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 23329,
        "nodeType": "ContractDefinition",
        "src": "154:428:9",
        "nodes": [
          {
            "id": 23281,
            "nodeType": "VariableDeclaration",
            "src": "190:26:9",
            "constant": false,
            "functionSelector": "bc33657a",
            "mutability": "mutable",
            "name": "myContract",
            "nameLocation": "206:10:9",
            "scope": 23329,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Contract_$23249",
              "typeString": "contract Contract"
            },
            "typeName": {
              "id": 23280,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 23279,
                "name": "Contract",
                "nameLocations": [
                  "190:8:9"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 23249,
                "src": "190:8:9"
              },
              "referencedDeclaration": 23249,
              "src": "190:8:9",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Contract_$23249",
                "typeString": "contract Contract"
              }
            },
            "visibility": "public"
          },
          {
            "id": 23292,
            "nodeType": "FunctionDefinition",
            "src": "223:68:9",
            "body": {
              "id": 23291,
              "nodeType": "Block",
              "src": "247:44:9",
              "statements": [
                {
                  "expression": {
                    "id": 23289,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 23284,
                      "name": "myContract",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23281,
                      "src": "257:10:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Contract_$23249",
                        "typeString": "contract Contract"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 23287,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "270:12:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_Contract_$23249_$",
                          "typeString": "function () returns (contract Contract)"
                        },
                        "typeName": {
                          "id": 23286,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 23285,
                            "name": "Contract",
                            "nameLocations": [
                              "274:8:9"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 23249,
                            "src": "274:8:9"
                          },
                          "referencedDeclaration": 23249,
                          "src": "274:8:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Contract_$23249",
                            "typeString": "contract Contract"
                          }
                        }
                      },
                      "id": 23288,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "270:14:9",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Contract_$23249",
                        "typeString": "contract Contract"
                      }
                    },
                    "src": "257:27:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Contract_$23249",
                      "typeString": "contract Contract"
                    }
                  },
                  "id": 23290,
                  "nodeType": "ExpressionStatement",
                  "src": "257:27:9"
                }
              ]
            },
            "functionSelector": "0a9254e4",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setUp",
            "nameLocation": "232:5:9",
            "parameters": {
              "id": 23282,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "237:2:9"
            },
            "returnParameters": {
              "id": 23283,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "247:0:9"
            },
            "scope": 23329,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 23300,
            "nodeType": "FunctionDefinition",
            "src": "297:63:9",
            "body": {
              "id": 23299,
              "nodeType": "Block",
              "src": "327:33:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "74727565",
                        "id": 23296,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "348:4:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 23295,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        269,
                        290
                      ],
                      "referencedDeclaration": 269,
                      "src": "337:10:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool)"
                      }
                    },
                    "id": 23297,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "337:16:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 23298,
                  "nodeType": "ExpressionStatement",
                  "src": "337:16:9"
                }
              ]
            },
            "functionSelector": "3f5a4a2a",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testExample",
            "nameLocation": "306:11:9",
            "parameters": {
              "id": 23293,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "317:2:9"
            },
            "returnParameters": {
              "id": 23294,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "327:0:9"
            },
            "scope": 23329,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 23311,
            "nodeType": "FunctionDefinition",
            "src": "366:92:9",
            "body": {
              "id": 23310,
              "nodeType": "Block",
              "src": "394:64:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 23304,
                            "name": "myContract",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 23281,
                            "src": "413:10:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Contract_$23249",
                              "typeString": "contract Contract"
                            }
                          },
                          "id": 23305,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "424:5:9",
                          "memberName": "hello",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 23238,
                          "src": "413:16:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_pure$__$returns$_t_string_memory_ptr_$",
                            "typeString": "function () pure external returns (string memory)"
                          }
                        },
                        "id": 23306,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "413:18:9",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "hexValue": "48656c6c6f2c20466f756e64727921",
                        "id": 23307,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "433:17:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6b7321b36eba7659dadb3cae3a5575b354337fa50af7c927526d990d2f0107a0",
                          "typeString": "literal_string \"Hello, Foundry!\""
                        },
                        "value": "Hello, Foundry!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6b7321b36eba7659dadb3cae3a5575b354337fa50af7c927526d990d2f0107a0",
                          "typeString": "literal_string \"Hello, Foundry!\""
                        }
                      ],
                      "id": 23303,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3167,
                        3192,
                        3205,
                        3221,
                        3263,
                        3305,
                        3347,
                        3384,
                        3421,
                        3458,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 1639,
                      "src": "404:8:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory,string memory)"
                      }
                    },
                    "id": 23308,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "404:47:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 23309,
                  "nodeType": "ExpressionStatement",
                  "src": "404:47:9"
                }
              ]
            },
            "functionSelector": "c97c6353",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testHello",
            "nameLocation": "375:9:9",
            "parameters": {
              "id": 23301,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "384:2:9"
            },
            "returnParameters": {
              "id": 23302,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "394:0:9"
            },
            "scope": 23329,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 23328,
            "nodeType": "FunctionDefinition",
            "src": "464:116:9",
            "body": {
              "id": 23327,
              "nodeType": "Block",
              "src": "496:84:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "3432",
                        "id": 23317,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "527:2:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_42_by_1",
                          "typeString": "int_const 42"
                        },
                        "value": "42"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_42_by_1",
                          "typeString": "int_const 42"
                        }
                      ],
                      "expression": {
                        "id": 23314,
                        "name": "myContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23281,
                        "src": "506:10:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Contract_$23249",
                          "typeString": "contract Contract"
                        }
                      },
                      "id": 23316,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "517:9:9",
                      "memberName": "setNumber",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 23248,
                      "src": "506:20:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 23318,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "506:24:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 23319,
                  "nodeType": "ExpressionStatement",
                  "src": "506:24:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 23321,
                            "name": "myContract",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 23281,
                            "src": "549:10:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Contract_$23249",
                              "typeString": "contract Contract"
                            }
                          },
                          "id": 23322,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "560:6:9",
                          "memberName": "number",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 23230,
                          "src": "549:17:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                            "typeString": "function () view external returns (uint256)"
                          }
                        },
                        "id": 23323,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "549:19:9",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "3432",
                        "id": 23324,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "570:2:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_42_by_1",
                          "typeString": "int_const 42"
                        },
                        "value": "42"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_42_by_1",
                          "typeString": "int_const 42"
                        }
                      ],
                      "id": 23320,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3167,
                        3192,
                        3205,
                        3221,
                        3263,
                        3305,
                        3347,
                        3384,
                        3421,
                        3458,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 514,
                      "src": "540:8:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 23325,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "540:33:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 23326,
                  "nodeType": "ExpressionStatement",
                  "src": "540:33:9"
                }
              ]
            },
            "functionSelector": "36c784ea",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testSetNumber",
            "nameLocation": "473:13:9",
            "parameters": {
              "id": 23312,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "486:2:9"
            },
            "returnParameters": {
              "id": 23313,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "496:0:9"
            },
            "scope": 23329,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 23277,
              "name": "Test",
              "nameLocations": [
                "179:4:9"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 4979,
              "src": "179:4:9"
            },
            "id": 23278,
            "nodeType": "InheritanceSpecifier",
            "src": "179:4:9"
          }
        ],
        "canonicalName": "ContractTest",
        "contractDependencies": [
          23249
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          23329,
          4979,
          2049,
          1786
        ],
        "name": "ContractTest",
        "nameLocation": "163:12:9",
        "scope": 23330,
        "usedErrors": []
      }
    ],
    "license": "UNLICENSED"
  },
  "id": 9
}